{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "customManagers": [
    {
      "customType": "regex",
      "description": ["Process CloudnativePG Postgresql version"],
      "fileMatch": [
        "(^|/)kubernetes/.+\\.ya?ml(?:\\.j2)?$"
      ],
      "matchStrings": [
        "imageName: (?<depName>\\S+):(?<currentValue>.*\\-.*)"
      ],
      "datasourceTemplate": "docker",
      "versioningTemplate": "redhat"
    },
    {
      customType: "regex",
      description: "Process various dependencies in YAML files",
      fileMatch: ["\\.ya?ml(\\.j2)?$"],
      matchStrings: [
        '\\S+: "?(?<currentValue>[^"\\s]+)"? # ?renovate: depName=(?<depName>\\S+)( datasource=(?<datasource>\\S+))?( versioning=(?<versioning>\\S+))?( extractVersion=(?<extractVersion>\\S+))?',
        '(?m:^[ \\t]*?# ?renovate: depName=(?<depName>\\S+)( datasource=(?<datasource>\\S+))?( versioning=(?<versioning>\\S+))?( extractVersion=(?<extractVersion>\\S+))?\\n[ \\t ]*?\\S+: "?(?<currentValue>[^" ]+?)"?$)',
      ],
      datasourceTemplate: "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
      extractVersionTemplate: "{{#if extractVersion}}{{{extractVersion}}}{{else}}^(?<version>.*)${{/if}}",
    },
    {
      "customType": "regex",
      "description": "Process various dependencies in bash files",
      "fileMatch": ["\\.sh$"],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?( extractVersion=(?<extractVersion>\\S+))?\\n(?<variableName>\\S+)=['\"]?(?<currentValue>[^'\"]+?)['\"]?$"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
      "extractVersionTemplate": "{{#if extractVersion}}{{{extractVersion}}}{{else}}^(?<version>.*)${{/if}}"
    },
    {
      customType: "regex",
      description: "Process GitHub download dependencies in YAML files",
      fileMatch: ["\\.ya?ml(\\.j2)?$"],
      matchStrings: [
        "https:\\/\\/github.com\\/(?<depName>\\S+?\\/\\S+?)\\/releases\\/download\\/(?<currentValue>(v|\\d)\\S+?)\\/\\S+",
        "https:\\/\\/raw.githubusercontent.com\\/(?<depName>\\S+?\\/\\S+?)\\/(?<currentValue>(v|\\d)\\S+?)\\/\\S+",
      ],
      datasourceTemplate: "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
      extractVersionTemplate: "{{#if extractVersion}}{{{extractVersion}}}{{else}}^(?<version>.*)${{/if}}",
    },
    {
      description: ["Process Helm Chart appVersion"],
      "customType": "regex",
      "datasourceTemplate": "docker",
      "fileMatch": [
        "(^|/)Chart\\.yaml$"
      ],
      "matchStrings": [
        "#\\s*renovate: image=(?<depName>.*?)\\s+appVersion:\\s*[\"']?(?<currentValue>[\\w+\\.\\-]*)"
      ],
    },
    {
      "customType": "regex",
      "description": ["Process Grafana dashboards"],
      "fileMatch": [
        "(^|/)kubernetes/.+\\.ya?ml(?:\\.j2)?$"
      ],
      "matchStrings": [
        "depName=\"(?<depName>.*)\"\\n(?<indentation>\\s+)gnetId: (?<packageName>\\d+)\\n.+revision: (?<currentValue>\\d+)"
      ],
      "autoReplaceStringTemplate": "depName=\"{{{depName}}}\"\n{{{indentation}}}gnetId: {{{packageName}}}\n{{{indentation}}}revision: {{{newValue}}}",
      "datasourceTemplate": "custom.grafana-dashboards",
      "versioningTemplate": "regex:^(?<major>\\d+)$"
    },
    {
      "customType": "regex",
      "description": ["Process custom dependencies in GitHub Actions"],
      "fileMatch": [
        "(^|/)(workflow-templates|\\.(?:github|gitea|forgejo)/(?:workflows|actions))/.+\\.ya?ml$",
        "(^|/)action\\.ya?ml$"
      ],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>[a-z-.]+?) depName=(?<depName>[^\\s]+?)(?: (?:lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\s]+?))?\\s+[A-Za-z0-9_]+?_VERSION\\s*:\\s*[\"']?(?<currentValue>.+?)[\"']?\\s"
      ],
    },
  ],
}
